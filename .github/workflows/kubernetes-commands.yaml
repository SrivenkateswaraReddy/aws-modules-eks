name: Kubernetes-commands-eks

on:
  workflow_dispatch:

jobs:
  setup-eks-and-deploy-tools:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Replace with your AWS region

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name dev-eks-cluster

      ####################################################
      # STEP 1: Install cert-manager (Required by Rancher)
      ####################################################
      - name: Create cert-manager namespace
        run: kubectl create namespace cert-manager || true

      - name: Install cert-manager CRDs and Helm chart
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/latest/download/cert-manager.crds.yaml
          helm install cert-manager jetstack/cert-manager \
            --namespace cert-manager \
            --version v1.14.2

      - name: Wait for cert-manager to be ready
        run: |
          kubectl wait --for=condition=Available deployment/cert-manager -n cert-manager --timeout=180s
          kubectl wait --for=condition=Available deployment/cert-manager-webhook -n cert-manager --timeout=180s
          kubectl wait --for=condition=Available deployment/cert-manager-cainjector -n cert-manager --timeout=180s

      ##################################
      # STEP 2: Install Argo CD
      ##################################
      - name: Create Argo CD namespace
        run: kubectl create namespace argocd || true

      - name: Install Argo CD
        run: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

      - name: Wait for Argo CD pods to be ready
        run: |
          kubectl wait --for=condition=Ready pods --all -n argocd --timeout=180s

      ##################################
      # STEP 3: Install Rancher
      ##################################
      - name: Create Rancher namespace
        run: kubectl create namespace cattle-system || true

      - name: Add Rancher Helm repo
        run: |
          helm repo add rancher-latest https://releases.rancher.com/server-charts/latest
          helm repo update

      - name: Install or upgrade Rancher with Let's Encrypt staging
        run: |
          helm upgrade --install rancher rancher-latest/rancher \
            --namespace cattle-system \
            --set hostname=rancher.my.domain.com \
            --set replicas=1 \
            --set ingress.tls.source=letsEncrypt \
            --set letsEncrypt.email=admin@my.domain.com \
            --set letsEncrypt.environment=staging

      - name: Wait for Rancher rollout
        run: |
          kubectl rollout status deployment/rancher -n cattle-system --timeout=300s

      ##################################
      # STEP 4: List all namespaces
      ##################################
      - name: List all namespaces
        run: kubectl get namespaces
